/*
To make it abit easier for myself, I have added the styles in the order that the elements appear.
*/

• {
  box-sizing: border-box!important;
}



h1, h2 {
  font-family: 'Georgia', serif;
  color: #51453B;
}

h1 { font-size: 1.2em;}

#appName {
  color: white;
}

h2 {font-size: 1.0em;}

h3 {color: #FFA500;}

a  {text-decoration: none !important;}

/*Removes indentation from <ul> tag */
ul {
  padding: 0;
}


li {list-style-type: none;}

/*Textual form controls—like <input>s, <select>s, and <textarea>s—are styled with the .form-control class.
 */


/*
nav a button

Tap targets should be bigger that your average finger
which is about 10mm or half an inche or 40CSS pixels in inorder
that fingers can use them . To ensure that all your elements are at least that size,
add min-width 48pixels and min-height 48pixels to every tappable element
*/


nav a, button {
  min-width: 48px;
  min-height: 48px;
  font-size: 14px;
}

a {text-decoration: none;}




body {
  background-color: #e5e5e5;
  font-family: Open Sans,Helvetica,sans-serif;
  font-size: 16px!important;
  font-style: normal;
  margin-right: auto;
  margin-left: auto;
}


header {
  background-color: #000000;
  height: 85px;
  width: 100%;
}

/* Styling of login page */

body#login  {
  background-color: #e5e5e5;
  display: grid;
  grid-column: auto;
}

header#loginHeader {
  padding-top: 40px;
  padding-bottom: 40px;
  padding-left: 0px;
  padding-right: 0px;
  text-align: center;
  background-color: #e5e5e5;
}


header#loginHeader {
  padding-top: 20px;
  padding-bottom: 20px;
}


/* Selects all <div> elements with class="login-wrapper" */

div.login-wrapper {
  width: 100%;
  padding: 10px 10px, 10px 10px;
}


/*Select all elements class grid cell that is a descendant of the id. */
.form-wrapper {
  display: grid;
  width: 100%;
}

#oauth-wrapper {
  display: grid;
  justify-content: center;
}

.oauth-wrapper {
  display: flex;
}

/* Select all elements with these two attributes */
.oauth-wrapper .space-between {
  justify-content: space-between;
  
}



#content-wrapper {
  display: grid;
  margin-top: 0px;
  margin-bottom: 24px;
  margin-left: auto;
  margin-right: auto;
  padding: 32px 40px;
  background: rgb(255, 255, 255) none repeat scroll 0% 0%;
  border-radius: 3px;
  box-shadow: rgba(0, 0, 0, 0.1) 0px 0px 10px;

}


.inner-container {
  display: flex;
  width: 100%;
  height: 100%;
  justify-content: center;
}


#oauthWrapper .grid-cell {
  display: block;
  margin-bottom: 20px;
}
/* select allelements whose attributes include both classes   */
.form-group .hundred-percent {
  width: 100%;
}


.grid-cell ul {
  font-size: 14px;
  display: inline-flex;

}


input.grid-cell {
  min-width: 100%;
  white-space: nowrap;

}


/*End of login page styling */





/* Styling the header */
.top-menu {
  font-weight: 400;
  -webkit-font-smoothing: antialiased;
  color: #ffffff;
  background: #000000;
  height: 85px;
  padding: 15px;
  width: 100%;
}

.flex-container {
  display: flex;
}

.space-between {
  justify-content: space-between;
}

.vertical-centerer {
  height: 100%;
  flex-direction: column;
  justify-content: center;
}
/*Styling the header and login button */
.header-content.login-content {
  width: 960px;
  margin-left: auto;
  margin-right: auto;
}
.logo {
  width: 200px;
  display: inline-block;
  margin: 10px 0px;
}
.menu {
  list-style: none;
  list-style-type: none;
}
.menu > li {
  display: inline;
  margin-left: 37.5px;
}

/* End of style for header */

/*Style with :target

The :target CSS pseudo-class represents a unique element (the target element) with an id matching the URL's fragment.

/* Selects an element with an ID matching the current URL's fragment
:target {
  border: 2px solid black;
}
*/

/*
For example, the following URL has a fragment (denoted by the # sign) that points to an element called section2:

http://www.example.com/index.html#section2

The following element would be selected by a :target selector when the current URL is equal to the above:

<section id="section2">Example</section>
*/


/*This is the style of the log in button from google.*/

#customBtn {
  display: inline-block;
  background: white;
  color: #444;
  width: 300px;
  border-radius: 5px;
  border: thin solid #888;
  box-shadow: 1px 1px 1px grey;
  white-space: nowrap;
}
#customBtn:hover {
  cursor: pointer;
}
span.label {
  font-family: serif;
  font-weight: normal;
}
span.icon {
  background: url('/identity/sign-in/g-normal.svg') transparent 5px 50% no-repeat;
  display: inline-block;
  vertical-align: middle;
  width: 42px;
  height: 42px;
}
span.buttonText {
  display: inline-block;
  vertical-align: middle;
  padding-left: 42px;
  padding-right: 42px;
  font-size: 14px;
  font-weight: bold;
  /* Use the Roboto font that is loaded in the <head> */
  font-family: 'Roboto', sans-serif;
}

/*End of google login styling */



.container {
  display: grid;
  max-width: 100%;
  max-height: 100%;
}

/* CORRECTION OF SHRINK ENFORECED BY BOOTSRAP */
/*Selects all elements with both classes as attribute
Remove any boostrap propperty that is forcing the issue ie .row and col-md */
.info .product-item {
  display: block;
  max-width: 100%;
}



.row {
  width: 100%;
}

div.no-flex-shrink.col-md-1 {
}

.col-md-1 {
  width: 8%;
}


/*Select all <div> elements with class="col-md-10"  */
/* The display:flex property here is used to render this element items/columns in a row */
.main {
  background-color: white;
  max-width: 100%;
  max-height: 100%;
  display: flex;
  margin-top: 30px;
  margin-bottom: 70px;
  padding-top: 20px;
  padding-bottom: 30px;
}

#row1 {
  width: 100%;
}

/*Select all <span> elements with the class="text-muted"  */
span.text-muted {
  color: #e5e5e5;
}



/*Selects all elements with class vl that is a descendant of an element with button */
.vl.button {
  width: 1px;
  height: 3px;
  border-left: 1px solid red;
}




/*Select all <li> elements with the class="flash" */
li.flash {
	list-style-type: none;
	text-align: center;

}

.main.col-md-2 {
  min-width: 100%;
}

.col-md-5 {
  padding-left: 15px;
  margin-left: 15px;
}

.main.col-md-8 {
  min-width: 100%;
}

.flash {
	background-color: #98FB98;
	width:100%;
	text-decoration: none;

}


.vl {
  width: 1px;
  height: 100%;
  border-left: 1px solid #e5e5e5;
}

.padding-top { padding-top: 20px;padding-bottom: 20px;}

.padding-bottom { padding-bottom: 30px; }



.padding-none {
	padding: 0;
}


/*Selects all <div> elements with class="button"*/
div.button {
  display: flex;
  min-width: 48px;
  min-height: 48px;
  font-size: 14px;
}





/*Selects all elements with bt that is a descendant of an element with button */

.bt.button {
  margin-left: 30px;
}


/* Cart styling */
/* > The angle bracket refers to immediate child selector*/
.table>tbody>tr>td, .table>tfoot>tr>td {
    vertical-align: middle;
}
@media screen and (max-width: 600px) {
    table#cart tbody td .form-control{
		width:20%;
		display: inline !important;
	}
	.actions .btn{
		width:36%;
		margin:1.5em 0;
	}

	.actions .btn-info{
		float:left;
	}
	.actions .btn-danger{
		float:right;
	}


/* The gap indicate a descendant selector*/
	table#cart thead { display: none; }
	table#cart tbody td { display: block; padding: .6rem; min-width:320px;}
	table#cart tbody tr td:first-child { background: #333; color: #fff; }
	table#cart tbody td:before {
		content: attr(data-th); font-weight: bold;
		display: inline-block; width: 8rem;
	}



	table#cart tfoot td{display:block; }
	table#cart tfoot td .btn{display:block;}

}
